<?xml version="1.0" encoding="utf-8" ?>
<project name="gwt-bree" xmlns:ivy="antlib:org.apache.ivy.ant" default="build" basedir=".">
    <path id="project.class.path">
        <pathelement location="war/WEB-INF/classes"/>
            <fileset dir="lib" includes="**/*.jar"/>
        </path>

        <property name="ivy.install.version" value="2.2.0" />
        <condition property="ivy.home" value="${env.IVY_HOME}">
            <isset property="env.IVY_HOME" />
        </condition>
        <property name="ivy.home" value="${user.home}/.ant" />
        <property name="ivy.jar.dir" value="${ivy.home}/lib" />
        <property name="ivy.jar.file" value="${ivy.jar.dir}/ivy.jar" />
        
        <target name="download-ivy" unless="offline">
            <mkdir dir="${ivy.jar.dir}"/>
<!-- download Ivy from web site so that it can be used even without any special installation -->
            <get src="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" dest="${ivy.jar.file}" usetimestamp="true"/>
        </target>

        <target name="init-ivy" depends="download-ivy">
        <!-- try to load ivy here from ivy home, in case the user has not already dropped it into ant's lib dir (note that the latter copy will always take precedence).  We will not fail as long as local lib dir exists (it may be empty) and ivy is in at least one of ant's lib dir or the local lib dir. -->
            <path id="ivy.lib.path">
                <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
            </path>
            <taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant" classpathref="ivy.lib.path"/>
        </target>
       
        <target name="resolve" depends="init-ivy" description="retrieve dependencies with ivy">
            <mkdir dir="lib/runtime" />
            <mkdir dir="lib/compile" />
            <mkdir dir="lib/sdk" />
            <ivy:retrieve pattern="${ivy.lib.dir}/[conf]/[artifact].[ext]"/>
        </target>
                                                                                                                                                                               
        <target name="libs" depends="resolve" description="Copy libs to WEB-INF/lib">
             <mkdir dir="war/WEB-INF/lib" />
             <copy todir="war/WEB-INF/lib" >
                <fileset dir="lib/runtime" includes="**/*.jar"/>
             </copy>
        </target>

        <target name="javac" depends="libs" description="Compile java source">
            <mkdir dir="war/WEB-INF/classes"/>
            <javac srcdir="src" includes="**" encoding="utf-8" destdir="war/WEB-INF/classes" source="1.5" target="1.5" nowarn="true" debug="true" debuglevel="lines,vars,source">
                <classpath refid="project.class.path"/>
            </javac>
            <copy todir="war/WEB-INF/classes">
                <fileset dir="src" excludes="**/*.java"/>
            </copy>
        </target>

        <target name="gwtc" depends="javac" description="GWT compile to JavaScript">
            <java failonerror="true" fork="true" classname="com.google.gwt.dev.Compiler">
                <classpath>
                    <pathelement location="src"/>
                        <path refid="project.class.path"/>
                    </classpath>
<!-- add jvmarg -Xss16M or similar if you see a StackOverflowError -->
                <jvmarg value="-Xmx256M"/>
<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
                <arg value="com.geekvigarista.gwt.bree.Gwt_bree"/>
            </java>
        </target>
        
        <target name="hosted" depends="javac" description="Run hosted mode">
            <java failonerror="true" fork="true" classname="com.google.gwt.dev.HostedMode">
                <classpath>
                    <pathelement location="src"/>
                        <path refid="project.class.path"/>
                </classpath>
                <jvmarg value="-Xmx256M"/>
                <arg value="-startupUrl"/>
                <arg value="gwt-bree.html"/>
<!-- Additional arguments like -style PRETTY or -logLevel DEBUG -->
                <arg value="com.mostlyblather.gwt-bree"/>
            </java>
        </target>

    <target name="build" depends="gwtc" description="Build this project" />
    <target name="war" depends="build" description="Create a war file">
        <zip destfile="gwt-bree.war" basedir="war"/>
    </target>
    
    <target name="clean" description="Cleans this project">
        <delete dir="war/WEB-INF/classes" failonerror="false" />    
        <delete dir="war/WEB-INF/lib" failonerror="false" />    
        <delete dir="war/gwtbree" failonerror="false" />
        <delete dir="lib" failonerror="false" />
    </target>
</project>
